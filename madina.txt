...
    gcc -g src/*.c executor/*.c libft/*.c -lreadline -o minishell

used functions:
    SIGINT  - (Прерывание программы)
        посылается программе выполняемой на терминале, 
        с помощью нажатия   Ctrl-C

     /* SIGINT менее жесток, чем SIGQUIT; последний создает дамп памяти */

    SIGQUIT - завершение процесса
        Нажатие «quit» на терминале
        обычно — Ctrl+\





    dup   - дубликат fd, использует самый маленький свободный номер дескриптора
    dup2  - делает newfd копией oldfd, закрывая newfd, если требуется



    #define STDIN_FILENO 0 / * Standard input. * /
    #define STDOUT_FILENO 1 / * Standard output. * /
    #define STDERR_FILENO 2 / * Standard error output. * /

    stdin: 
        1. Указатель на файл (* ФАЙЛ) 
        2. Таблица файлового дескриптора содержит свой адрес при создании процесса. 
        3. присутствует в /usr/include/stdio.h

    STDIN_FILENO: 
        1. Это макрос 
        2. Это как индекс массива таблицы fd (по умолчанию 0). 
     3. присутствует в /usr/include/unistd.h

    fork - порождается новый процесс (процесс-потомок), 
        который почти идентичен порождающему процессу-родителю. 
        Процесс-потомок наследует следующие признаки родителя
        (возникают два полностью идентичных процесса)

    waitpid - ожидает завершения процесса 

    access - Если запрошенный доступ разрешен,успешно и вернет 0;
        в противном случае возвращается -1,
        и errno должен быть установлен для указания на ошибку.




